<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Информация о проекте -->
    <groupId>com.myplugin</groupId>
    <artifactId>SpawnChestPlugin</artifactId>
    <version>2.0.0</version>
    <packaging>jar</packaging>

    <name>SpawnChestPlugin</name>
    <description>Эпичный плагин для спавна сундуков с лутом, охранниками и эффектами!</description>
    <url>https://github.com/yourname/spawnchest</url>

    <!-- Свойства проекта -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        
        <!-- Версии зависимостей -->
        <paper.version>1.20.6-R0.1-SNAPSHOT</paper.version>
        <junit.version>5.10.1</junit.version>
        <maven.shade.version>3.5.1</maven.shade.version>
        <maven.compiler.version>3.11.0</maven.compiler.version>
        <maven.surefire.version>3.2.2</maven.surefire.version>
    </properties>

    <!-- Зависимости -->
    <dependencies>
        <!-- Paper API (основная зависимость) -->
        <dependency>
            <groupId>io.papermc.paper</groupId>
            <artifactId>paper-api</artifactId>
            <version>${paper.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- JUnit для тестов (опционально) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Репозитории -->
    <repositories>
        <!-- PaperMC Repository -->
        <repository>
            <id>papermc</id>
            <url>https://repo.papermc.io/repository/maven-public/</url>
        </repository>
        
        <!-- Sonatype Repository (дополнительно) -->
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/groups/public/</url>
        </repository>
        
        <!-- JitPack Repository (для GitHub зависимостей) -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <!-- Сборка проекта -->
    <build>
        <!-- Название итогового файла -->
        <finalName>${project.name}-${project.version}</finalName>
        
        <!-- Ресурсы -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.yaml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.yml</exclude>
                    <exclude>**/*.yaml</exclude>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <!-- Плагины Maven -->
        <plugins>
            <!-- Компилятор Java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <release>${maven.compiler.release}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                        <arg>-Xlint:all</arg>
                        <arg>-Xlint:-processing</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- Shade Plugin для упаковки зависимостей -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.version}</version>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <shadedArtifactAttached>false</shadedArtifactAttached>
                    
                    <!-- Фильтры для исключения ненужных файлов -->
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/MANIFEST.MF</exclude>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>META-INF/services/**</exclude>
                                <exclude>**/*.kotlin_metadata</exclude>
                                <exclude>**/*.kotlin_module</exclude>
                                <exclude>**/*.kotlin_builtins</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    
                    <!-- Перемещение пакетов (если нужно избежать конфликтов) -->
                    <relocations>
                        <!-- Пример перемещения, если используешь внешние библиотеки -->
                        <!-- 
                        <relocation>
                            <pattern>org.example.library</pattern>
                            <shadedPattern>com.myplugin.libs.library</shadedPattern>
                        </relocation>
                        -->
                    </relocations>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Surefire Plugin для тестов -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Resources Plugin для правильной обработки ресурсов -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Clean Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>

            <!-- Install Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>

            <!-- Deploy Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>

            <!-- Site Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>4.0.0-M13</version>
            </plugin>
        </plugins>
    </build>

    <!-- Профили для разных окружений -->
    <profiles>
        <!-- Профиль для разработки -->
        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.compiler.debug>true</maven.compiler.debug>
                <maven.compiler.optimize>false</maven.compiler.optimize>
            </properties>
        </profile>

        <!-- Профиль для продакшена -->
        <profile>
            <id>production</id>
            <properties>
                <maven.compiler.debug>false</maven.compiler.debug>
                <maven.compiler.optimize>true</maven.compiler.optimize>
            </properties>
            <build>
                <plugins>
                    <!-- Дополнительная минификация для продакшена -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <configuration>
                            <minimizeJar>true</minimizeJar>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Профиль для тестирования -->
        <profile>
            <id>testing</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.11</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- Информация о разработчике -->
    <developers>
        <developer>
            <id>yourname</id>
            <name>Your Name</name>
            <email>your.email@example.com</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <!-- Лицензия -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- SCM информация -->
    <scm>
        <connection>scm:git:git://github.com/yourname/spawnchest.git</connection>
        <developerConnection>scm:git:ssh://github.com/yourname/spawnchest.git</developerConnection>
        <url>https://github.com/yourname/spawnchest</url>
    </scm>

    <!-- Issue Management -->
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/yourname/spawnchest/issues</url>
    </issueManagement>
</project>